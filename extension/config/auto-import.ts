import type { ImportsMap, PresetName } from "unplugin-auto-import/types";

export const imports: Array<ImportsMap | PresetName> = [
  "react",
  {
    // "~/components/icons": [
    //   "AddIcon",
    //   "AlertIcon",
    //   "CheckCircleIcon",
    //   "CreateIcon",
    //   "DeleteIcon",
    //   "DashboardIcon",
    //   "EditIcon",
    //   "OpenExternalIcon",
    //   "SaveIcon",
    //   "SearchIcon",
    //   "SettingsIcon",
    //   "UserIcon",
    // ],
    "~/helpers/apollo/notifications": ["useApolloAlertCallback"],
    "~/helpers/errors": ["formatError"],
    "~/helpers/form": ["parseFormErrors", "showFormErrorsAlert"],
    // "~/helpers/luxon": ["useParseDateTime"],
    "~/helpers/hooks": ["useMounted"],
    "~/helpers/notifications": ["showNotice", "showAlert"],
    "~/helpers/resolve": [["default", "resolve"]],
    "@apollo/client/index": [
      "useApolloClient",
      "useQuery",
      "useLazyQuery",
      "useSubscription",
      "useMutation",
    ],
    "@mantine/core": [
      "packSx",
      "rem",
      "useMantineTheme",
      "useMantineColorScheme",
      "Alert",
      "Anchor",
      "Badge",
      "Box",
      "Button",
      "Card",
      "Center",
      "Checkbox",
      "Chip",
      "Container",
      "Divider",
      "Flex",
      "Group",
      "List",
      "LoadingOverlay",
      "Menu",
      "MediaQuery",
      "Skeleton",
      "Space",
      "Stack",
      "Text",
      "Textarea",
      "TextInput",
      "Title",
      "Tooltip",
      "Transition",
    ],
    // "@mantine/form": ["useForm"],
    "@mantine/hooks": [
      "useDebouncedValue",
      "useDidUpdate",
      "useElementSize",
      "useLogger",
      "useMediaQuery",
      "useViewportSize",
      "useWindowEvent",
    ],
    "@mantine/notifications": ["showNotification"],
    "lodash-es": [
      "first",
      "get",
      "isEmpty",
      "isEqual",
      "keyBy",
      "mapKeys",
      "mapValues",
      "omit",
      "pick",
      "take",
      "takeRight",
      "uniqBy",
    ],
    // luxon: ["DateTime", "Duration"],
    "tiny-invariant": [["default", "invariant"]],
  },
];
