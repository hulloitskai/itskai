# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `wrapped_print` gem.
# Please instead update this file by running `bin/tapioca gem wrapped_print`.

class Object < ::BasicObject
  include ::Kernel
  include ::PP::ObjectMixin
  include ::WrappedPrint::Main
end

# end
#
# source://wrapped_print//lib/wrapped_print/version.rb#1
module WrappedPrint
  # source://wrapped_print//lib/wrapped_print.rb#18
  def level; end

  # source://wrapped_print//lib/wrapped_print.rb#18
  def level=(val); end

  # source://wrapped_print//lib/wrapped_print.rb#15
  def log_to; end

  # source://wrapped_print//lib/wrapped_print.rb#15
  def log_to=(val); end

  class << self
    # source://wrapped_print//lib/wrapped_print.rb#18
    def level; end

    # source://wrapped_print//lib/wrapped_print.rb#18
    def level=(val); end

    # source://wrapped_print//lib/wrapped_print.rb#15
    def log_to; end

    # source://wrapped_print//lib/wrapped_print.rb#15
    def log_to=(val); end

    # @yield [_self]
    # @yieldparam _self [WrappedPrint] the object that the method was called on
    #
    # source://wrapped_print//lib/wrapped_print.rb#21
    def setup; end
  end
end

# source://wrapped_print//lib/wrapped_print.rb#25
module WrappedPrint::Main
  # source://wrapped_print//lib/wrapped_print.rb#30
  def __wp__(label = T.unsafe(nil), pattern: T.unsafe(nil), count: T.unsafe(nil), prefix: T.unsafe(nil), suffix: T.unsafe(nil), color: T.unsafe(nil)); end

  # source://wrapped_print//lib/wrapped_print.rb#30
  def wp(label = T.unsafe(nil), pattern: T.unsafe(nil), count: T.unsafe(nil), prefix: T.unsafe(nil), suffix: T.unsafe(nil), color: T.unsafe(nil)); end

  private

  # source://wrapped_print//lib/wrapped_print.rb#75
  def blue(text); end

  # source://wrapped_print//lib/wrapped_print.rb#78
  def colorize(text, color_code); end

  # source://wrapped_print//lib/wrapped_print.rb#76
  def dark_blue(text); end

  # source://wrapped_print//lib/wrapped_print.rb#73
  def dark_green(text); end

  # source://wrapped_print//lib/wrapped_print.rb#65
  def detect_color_method(e); end

  # source://wrapped_print//lib/wrapped_print.rb#54
  def detect_logger_method; end

  # source://wrapped_print//lib/wrapped_print.rb#72
  def green(text); end

  # source://wrapped_print//lib/wrapped_print.rb#70
  def none(text); end

  # source://wrapped_print//lib/wrapped_print.rb#77
  def pur(text); end

  # source://wrapped_print//lib/wrapped_print.rb#71
  def red(text); end

  # source://wrapped_print//lib/wrapped_print.rb#74
  def yellow(text); end
end

# source://wrapped_print//lib/wrapped_print.rb#26
WrappedPrint::Main::COLORS = T.let(T.unsafe(nil), Array)

# source://wrapped_print//lib/wrapped_print.rb#28
WrappedPrint::Main::COUNT = T.let(T.unsafe(nil), Integer)

# source://wrapped_print//lib/wrapped_print.rb#27
WrappedPrint::Main::PATTERN = T.let(T.unsafe(nil), String)

# source://wrapped_print//lib/wrapped_print/version.rb#2
WrappedPrint::VERSION = T.let(T.unsafe(nil), String)
