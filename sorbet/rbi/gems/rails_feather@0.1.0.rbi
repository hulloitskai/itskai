# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rails_feather` gem.
# Please instead update this file by running `bin/tapioca gem rails_feather`.

# source://rails_feather//lib/rails_feather/version.rb#1
module RailsFeather; end

# source://rails_feather//lib/rails_feather/helper.rb#4
module RailsFeather::Helper
  # To add a feather_icon, call <tt><%= feather_icon "activity" %></tt> on your erb template.
  # Head over to https://feathericons.com to view all the icons.
  #
  # == Options
  # The helper method accepts mutiple arguments such as:
  #
  # === Handling the icon size
  # Specify a <tt>size</tt> param in the helper method to set the <tt>height</tt> and <tt>width</tt>
  # on the <tt>svg</tt> icon.
  #
  # <tt><%= feather_icon "activity", size: 20 %></tt>
  #
  # <tt>size</tt> defaults to 24 if not defined.
  #
  # === Handling the stroke width
  #
  # Specify a <tt>stroke_width</tt> param in the helper method to set the <tt>stroke-width</tt>
  # on the <tt>svg</tt> icon.
  #
  # <tt><%= feather_icon "activity", stroke_width: 1 %></tt>
  #
  # <tt>stroke_width</tt> defaults to 2 if not defined.
  #
  # === HTML attributes
  # Any <tt>html</tt> and <tt>eruby</tt> attribute syntax is supported, for eg:
  #
  # <tt><%= feather_icon "activity", class: "custom-class", aria: { label: "User activity" } %></tt>
  #
  # == Accessibility
  # The helper method automatically sets <tt>aria-hidden="true"</tt> if <tt>aria-label</tt> is not set, and
  # if <tt>aria-label</tt> is set, then <tt>role="img"</tt> is set on the svg.
  #
  # source://rails_feather//lib/rails_feather/helper.rb#36
  def feather_icon(icon_name, **options); end
end

# source://rails_feather//lib/rails_feather.rb#6
RailsFeather::ICON_PATH = T.let(T.unsafe(nil), String)

# source://rails_feather//lib/rails_feather/rails_feather.rb#2
class RailsFeather::RailsFeather
  # @return [RailsFeather] a new instance of RailsFeather
  #
  # source://rails_feather//lib/rails_feather/rails_feather.rb#5
  def initialize(icon, size: T.unsafe(nil), stroke_width: T.unsafe(nil), **options); end

  # Returns the value of attribute options.
  #
  # source://rails_feather//lib/rails_feather/rails_feather.rb#3
  def options; end

  # Finds the svg icon with respect to variant.
  #
  # source://rails_feather//lib/rails_feather/rails_feather.rb#24
  def svg_path; end

  private

  # source://rails_feather//lib/rails_feather/rails_feather.rb#33
  def a11y; end
end

# source://rails_feather//lib/rails_feather/railtie.rb#4
class RailsFeather::Railtie < ::Rails::Railtie; end

# source://rails_feather//lib/rails_feather/version.rb#2
RailsFeather::VERSION = T.let(T.unsafe(nil), String)
