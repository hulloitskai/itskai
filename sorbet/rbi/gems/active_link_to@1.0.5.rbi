# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `active_link_to` gem.
# Please instead update this file by running `bin/tapioca gem active_link_to`.

class ActionView::Base
  include ::ActiveSupport::Benchmarkable
  include ::ActionView::Helpers::ActiveModelHelper
  include ::ActionView::Helpers::AssetUrlHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::AssetTagHelper
  include ::ActionView::Helpers::AtomFeedHelper
  include ::ActionView::Helpers::CacheHelper
  include ::ActionView::Helpers::ControllerHelper
  include ::ActionView::Helpers::CspHelper
  include ::ActionView::Helpers::CsrfHelper
  include ::ActionView::Helpers::DateHelper
  include ::ActionView::Helpers::DebugHelper
  include ::ActionView::ModelNaming
  include ::ActionView::RecordIdentifier
  include ::ActionView::Helpers::FormOptionsHelper
  include ::ActionView::Helpers::JavaScriptHelper
  include ::ActionView::Helpers::NumberHelper
  include ::ActionView::Helpers::RenderingHelper
  include ::Kaminari::Helpers::UrlHelper
  include ::ActiveLinkTo
  include ::Sprockets::Rails::Utils
end

# source://active_link_to//lib/active_link_to/active_link_to.rb#1
module ActiveLinkTo
  # Wrapper around link_to. Accepts following params:
  #   :active         => Boolean | Symbol | Regex | Controller/Action Pair
  #   :class_active   => String
  #   :class_inactive => String
  #   :disable_active => Boolean
  #   :wrap_tag       => Symbol
  # Example usage:
  #   active_link_to('/users', class_active: 'enabled')
  #   active_link_to(users_path, active: :exclusive, wrap_tag: :li)
  #
  # source://active_link_to//lib/active_link_to/active_link_to.rb#12
  def active_link_to(*args, &block); end

  # Returns css class name. Takes the link's URL and its params
  # Example usage:
  #   active_link_to_class('/root', class_active: 'on', class_inactive: 'off')
  #
  # source://active_link_to//lib/active_link_to/active_link_to.rb#58
  def active_link_to_class(url, options = T.unsafe(nil)); end

  # Returns true or false based on the provided path and condition
  # Possible condition values are:
  #                  Boolean -> true | false
  #                   Symbol -> :exclusive | :inclusive
  #                    Regex -> /regex/
  #   Controller/Action Pair -> [[:controller], [:action_a, :action_b]]
  #
  # Example usage:
  #
  #   is_active_link?('/root', true)
  #   is_active_link?('/root', :exclusive)
  #   is_active_link?('/root', /^\/root/)
  #   is_active_link?('/root', ['users', ['show', 'edit']])
  #
  # @return [Boolean]
  #
  # source://active_link_to//lib/active_link_to/active_link_to.rb#80
  def is_active_link?(url, condition = T.unsafe(nil)); end
end

# source://active_link_to//lib/active_link_to/version.rb#2
ActiveLinkTo::VERSION = T.let(T.unsafe(nil), String)
