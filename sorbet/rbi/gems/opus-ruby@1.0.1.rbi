# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `opus-ruby` gem.
# Please instead update this file by running `bin/tapioca gem opus-ruby`.

# source://opus-ruby//lib/opus-ruby/version.rb#1
module Opus
  extend ::FFI::Library

  def opus_decode(*_arg0); end
  def opus_decode_float(*_arg0); end
  def opus_decoder_create(*_arg0); end
  def opus_decoder_ctl(*args); end
  def opus_decoder_destroy(*_arg0); end
  def opus_decoder_get_size(*_arg0); end
  def opus_decoder_init(*_arg0); end
  def opus_encode(*_arg0); end
  def opus_encode_float(*_arg0); end
  def opus_encoder_create(*_arg0); end
  def opus_encoder_ctl(*args); end
  def opus_encoder_destroy(*_arg0); end
  def opus_encoder_get_size(*_arg0); end
  def opus_encoder_init(*_arg0); end

  class << self
    def opus_decode(*_arg0); end
    def opus_decode_float(*_arg0); end
    def opus_decoder_create(*_arg0); end
    def opus_decoder_ctl(*args); end
    def opus_decoder_destroy(*_arg0); end
    def opus_decoder_get_size(*_arg0); end
    def opus_decoder_init(*_arg0); end
    def opus_encode(*_arg0); end
    def opus_encode_float(*_arg0); end
    def opus_encoder_create(*_arg0); end
    def opus_encoder_ctl(*args); end
    def opus_encoder_destroy(*_arg0); end
    def opus_encoder_get_size(*_arg0); end
    def opus_encoder_init(*_arg0); end
  end
end

# source://opus-ruby//lib/opus-ruby.rb#11
module Opus::Constants; end

# source://opus-ruby//lib/opus-ruby.rb#19
Opus::Constants::OPUS_ALLOC_FAIL = T.let(T.unsafe(nil), Integer)

# source://opus-ruby//lib/opus-ruby.rb#21
Opus::Constants::OPUS_APPLICATION_AUDIO = T.let(T.unsafe(nil), Integer)

# source://opus-ruby//lib/opus-ruby.rb#22
Opus::Constants::OPUS_APPLICATION_RESTRICTED_LOWDELAY = T.let(T.unsafe(nil), Integer)

# source://opus-ruby//lib/opus-ruby.rb#20
Opus::Constants::OPUS_APPLICATION_VOIP = T.let(T.unsafe(nil), Integer)

# source://opus-ruby//lib/opus-ruby.rb#13
Opus::Constants::OPUS_BAD_ARG = T.let(T.unsafe(nil), Integer)

# source://opus-ruby//lib/opus-ruby.rb#14
Opus::Constants::OPUS_BUFFER_TOO_SMALL = T.let(T.unsafe(nil), Integer)

# source://opus-ruby//lib/opus-ruby.rb#15
Opus::Constants::OPUS_INTERNAL_ERROR = T.let(T.unsafe(nil), Integer)

# source://opus-ruby//lib/opus-ruby.rb#16
Opus::Constants::OPUS_INVALID_PACKET = T.let(T.unsafe(nil), Integer)

# source://opus-ruby//lib/opus-ruby.rb#18
Opus::Constants::OPUS_INVALID_STATE = T.let(T.unsafe(nil), Integer)

# source://opus-ruby//lib/opus-ruby.rb#12
Opus::Constants::OPUS_OK = T.let(T.unsafe(nil), Integer)

# source://opus-ruby//lib/opus-ruby.rb#27
Opus::Constants::OPUS_RESET_STATE = T.let(T.unsafe(nil), Integer)

# source://opus-ruby//lib/opus-ruby.rb#25
Opus::Constants::OPUS_SET_BITRATE_REQUEST = T.let(T.unsafe(nil), Integer)

# source://opus-ruby//lib/opus-ruby.rb#26
Opus::Constants::OPUS_SET_VBR_REQUEST = T.let(T.unsafe(nil), Integer)

# source://opus-ruby//lib/opus-ruby.rb#24
Opus::Constants::OPUS_SIGNAL_MUSIC = T.let(T.unsafe(nil), Integer)

# source://opus-ruby//lib/opus-ruby.rb#23
Opus::Constants::OPUS_SIGNAL_VOICE = T.let(T.unsafe(nil), Integer)

# source://opus-ruby//lib/opus-ruby.rb#17
Opus::Constants::OPUS_UNIMPLEMENTED = T.let(T.unsafe(nil), Integer)

# source://opus-ruby//lib/opus-ruby/decoder.rb#30
class Opus::Decoder
  # @return [Decoder] a new instance of Decoder
  #
  # source://opus-ruby//lib/opus-ruby/decoder.rb#33
  def initialize(sample_rate, frame_size, channels); end

  # Returns the value of attribute channels.
  #
  # source://opus-ruby//lib/opus-ruby/decoder.rb#31
  def channels; end

  # source://opus-ruby//lib/opus-ruby/decoder.rb#49
  def decode(data); end

  # source://opus-ruby//lib/opus-ruby/decoder.rb#41
  def destroy; end

  # Returns the value of attribute frame_size.
  #
  # source://opus-ruby//lib/opus-ruby/decoder.rb#31
  def frame_size; end

  # source://opus-ruby//lib/opus-ruby/decoder.rb#45
  def reset; end

  # Returns the value of attribute sample_rate.
  #
  # source://opus-ruby//lib/opus-ruby/decoder.rb#31
  def sample_rate; end
end

# source://opus-ruby//lib/opus-ruby/encoder.rb#2
class Opus::Encoder
  # @return [Encoder] a new instance of Encoder
  #
  # source://opus-ruby//lib/opus-ruby/encoder.rb#6
  def initialize(sample_rate, frame_size, channels); end

  # Returns the value of attribute bitrate.
  #
  # source://opus-ruby//lib/opus-ruby/encoder.rb#3
  def bitrate; end

  # source://opus-ruby//lib/opus-ruby/encoder.rb#27
  def bitrate=(value); end

  # Returns the value of attribute channels.
  #
  # source://opus-ruby//lib/opus-ruby/encoder.rb#3
  def channels; end

  # source://opus-ruby//lib/opus-ruby/encoder.rb#14
  def destroy; end

  # source://opus-ruby//lib/opus-ruby/encoder.rb#32
  def encode(data, size); end

  # Returns the value of attribute frame_size.
  #
  # source://opus-ruby//lib/opus-ruby/encoder.rb#3
  def frame_size; end

  # source://opus-ruby//lib/opus-ruby/encoder.rb#18
  def reset; end

  # Returns the value of attribute sample_rate.
  #
  # source://opus-ruby//lib/opus-ruby/encoder.rb#3
  def sample_rate; end

  # Returns the value of attribute vbr_rate.
  #
  # source://opus-ruby//lib/opus-ruby/encoder.rb#3
  def vbr_rate; end

  # source://opus-ruby//lib/opus-ruby/encoder.rb#22
  def vbr_rate=(value); end
end

# source://opus-ruby//lib/opus-ruby/version.rb#2
Opus::VERSION = T.let(T.unsafe(nil), String)
