# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Internal::MailerForm`.
# Please instead update this file by running `bin/tapioca dsl Internal::MailerForm`.

class Internal::MailerForm
  sig { returns(T.nilable(::String)) }
  def business_id; end

  sig { params(value: T.nilable(::String)).returns(T.nilable(::String)) }
  def business_id=(value); end

  sig { returns(T.untyped) }
  def business_list; end

  sig { returns(Enumerize::Value) }
  def business_list; end

  sig { params(value: T.untyped).returns(T.untyped) }
  def business_list=(value); end

  sig { returns(T.nilable(::String)) }
  def community_id; end

  sig { params(value: T.nilable(::String)).returns(T.nilable(::String)) }
  def community_id=(value); end

  sig { returns(T.untyped) }
  def community_list; end

  sig { returns(Enumerize::Value) }
  def community_list; end

  sig { params(value: T.untyped).returns(T.untyped) }
  def community_list=(value); end

  sig { returns(T.nilable(::String)) }
  def message; end

  sig { params(value: T.nilable(::String)).returns(T.nilable(::String)) }
  def message=(value); end

  sig { returns(T.nilable(::String)) }
  def subject; end

  sig { params(value: T.nilable(::String)).returns(T.nilable(::String)) }
  def subject=(value); end

  sig { returns(T.untyped) }
  def target; end

  sig { returns(Enumerize::Value) }
  def target; end

  sig { params(value: T.untyped).returns(T.untyped) }
  def target=(value); end

  sig { returns(T.nilable(::String)) }
  def to; end

  sig { params(value: T.nilable(::String)).returns(T.nilable(::String)) }
  def to=(value); end

  sig { returns(T.nilable(::String)) }
  def user_id; end

  sig { params(value: T.nilable(::String)).returns(T.nilable(::String)) }
  def user_id=(value); end

  sig { returns(T.untyped) }
  def user_list; end

  sig { returns(Enumerize::Value) }
  def user_list; end

  sig { params(value: T.untyped).returns(T.untyped) }
  def user_list=(value); end

  class << self
    sig { returns(Enumerize::Attribute) }
    def business_list; end

    sig { returns(Enumerize::Attribute) }
    def community_list; end

    sig { returns(Enumerize::Attribute) }
    def target; end

    sig { returns(Enumerize::Attribute) }
    def user_list; end
  end
end
