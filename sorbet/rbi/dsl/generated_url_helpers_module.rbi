# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GeneratedUrlHelpersModule`.
# Please instead update this file by running `bin/tapioca dsl GeneratedUrlHelpersModule`.


module GeneratedUrlHelpersModule
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionDispatch::Routing::PolymorphicRoutes

  sig { params(args: T.untyped).returns(String) }
  def access_location_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_icloud_connection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_location_access_grant_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_location_access_grants_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_oauth_connection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def atelier_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def calendly_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def call_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cathendant_memos_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cathendant_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def coffee_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def comments_journal_entry_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def contact_url_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def contribute_cathendant_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def currently_playing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_user_session_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_exploration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_password_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_registration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def exploration_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def exploration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def explorations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def file_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def good_job_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def grant_location_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def hangout_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def image_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def join_spotify_jam_sessions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def location_access_grants_admin_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def location_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mailcatcher_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_exploration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_source_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_confirmation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_password_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_registration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_session_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def opencal_intro_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def opencal_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def password_strength_checks_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_incinerate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_reroute_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_sources_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_direct_uploads_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_disk_service_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_properties_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_routes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailgun_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mandrill_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mandrill_inbound_health_check_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_postmark_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_relay_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_representation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_sendgrid_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_redirect_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def resume_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def root_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def spotify_track_lyrics_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def src_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def status_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def submit_test_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sync_journal_entries_admin_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sync_location_logs_admin_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def test_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toronto_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def track_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_rails_disk_service_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_confirmation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_google_omniauth_authorize_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_google_omniauth_callback_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_password_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_registration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_session_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_spotify_omniauth_authorize_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_spotify_omniauth_callback_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def verify_security_code_admin_icloud_connection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def walk_url(*args); end
end
