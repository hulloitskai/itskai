# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GeneratedPathHelpersModule`.
# Please instead update this file by running `bin/tapioca dsl GeneratedPathHelpersModule`.


module GeneratedPathHelpersModule
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionDispatch::Routing::PolymorphicRoutes

  sig { params(args: T.untyped).returns(String) }
  def access_location_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def actual_db_schema_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def add_event_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_exploration_comments_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_friends_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_icloud_connection_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_location_access_grant_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_location_access_grants_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_notifications_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_oauth_connection_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_settings_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_status_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_statuses_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def atelier_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def backfill_addresses_admin_location_logs_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def calendly_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def call_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cathendant_contribute_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cathendant_memos_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cathendant_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_email_user_registration_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_password_user_registration_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def change_push_subscriptions_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def coffee_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def contact_url_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def currently_playing_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def delivered_notification_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_user_session_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_password_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_registration_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def exploration_comments_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def feed_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def file_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def friend_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def good_job_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def grant_location_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def hangout_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def image_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def join_spotify_jam_sessions_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def location_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def lookup_push_subscriptions_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mailcatcher_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_source_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_confirmation_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_password_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_registration_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_session_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notify_friends_admin_status_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def notion_journal_entry_comments_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def opencal_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def password_strength_checks_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def public_key_push_subscriptions_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def push_subscriptions_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_proxy_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_incinerate_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_reroute_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_sources_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_direct_uploads_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_disk_service_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_notes_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_properties_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_routes_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailers_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailgun_inbound_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mandrill_inbound_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mandrill_inbound_health_check_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_postmark_inbound_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_relay_inbound_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_representation_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_sendgrid_inbound_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_proxy_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_proxy_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_redirect_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def resume_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def root_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def spotify_track_lyrics_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def src_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def submit_test_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sync_admin_location_logs_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sync_admin_notion_journal_entries_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def test_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def test_push_subscriptions_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toronto_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def track_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unsubscribe_push_subscriptions_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def up_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_rails_disk_service_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_confirmation_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_google_omniauth_authorize_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_google_omniauth_callback_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_password_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_registration_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_session_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_spotify_omniauth_authorize_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_spotify_omniauth_callback_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def verify_security_code_admin_icloud_connection_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def vibecheck_friend_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def walk_path(*args); end
end
