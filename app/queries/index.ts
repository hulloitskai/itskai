import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** An ISO 8601-encoded date */
  Date: string;
  /** An ISO 8601-encoded datetime */
  DateTime: string;
  /** Represents untyped JSON */
  JSON: any;
  /** Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"VXNlci0xMA=="`) or integer (such as `4`) input value will be accepted as an ID. */
  ShortID: any;
};

/** Autogenerated input type of AccountUpdate */
export type AccountUpdateInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
};

/** Autogenerated return type of AccountUpdate. */
export type AccountUpdatePayload = {
  __typename?: 'AccountUpdatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<Scalars['String']>;
  errors: Maybe<Array<ValidationError>>;
  user: Maybe<User>;
};

export type ICloudCredentials = Identifiable & Node & {
  __typename?: 'ICloudCredentials';
  cookies: Maybe<Scalars['String']>;
  email: Scalars['String'];
  /** ID of the object. */
  id: Scalars['ID'];
  password: Scalars['String'];
  session: Maybe<Scalars['JSON']>;
  /** ShortID of the object. */
  shortId: Scalars['ShortID'];
};

/** Autogenerated input type of ICloudCredentialsUpdate */
export type ICloudCredentialsUpdateInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  email: Scalars['String'];
  password: Scalars['String'];
};

/** Autogenerated return type of ICloudCredentialsUpdate. */
export type ICloudCredentialsUpdatePayload = {
  __typename?: 'ICloudCredentialsUpdatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<Scalars['String']>;
  errors: Maybe<Array<ValidationError>>;
  icloudCredentials: Maybe<ICloudCredentials>;
};

/** Autogenerated input type of ICloudCredentialsVerifySecurityCode */
export type ICloudCredentialsVerifySecurityCodeInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  code: Scalars['String'];
};

/** Autogenerated return type of ICloudCredentialsVerifySecurityCode. */
export type ICloudCredentialsVerifySecurityCodePayload = {
  __typename?: 'ICloudCredentialsVerifySecurityCodePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<Scalars['String']>;
  icloudCredentials: ICloudCredentials;
};

/** An object with an ID. */
export type Identifiable = {
  /** ID of the object. */
  id: Scalars['ID'];
  /** ShortID of the object. */
  shortId: Scalars['ShortID'];
};

export type Mutation = {
  __typename?: 'Mutation';
  accountUpdate: AccountUpdatePayload;
  icloudCredentialsUpdate: ICloudCredentialsUpdatePayload;
  icloudCredentialsVerifySecurityCode: ICloudCredentialsVerifySecurityCodePayload;
  testMutation: TestMutationPayload;
};


export type MutationAccountUpdateArgs = {
  input: AccountUpdateInput;
};


export type MutationIcloudCredentialsUpdateArgs = {
  input: ICloudCredentialsUpdateInput;
};


export type MutationIcloudCredentialsVerifySecurityCodeArgs = {
  input: ICloudCredentialsVerifySecurityCodeInput;
};


export type MutationTestMutationArgs = {
  input: TestMutationInput;
};

/** An object with an ID. */
export type Node = {
  /** ID of the object. */
  id: Scalars['ID'];
};

/** An object with an ID. */
export type ObsidianEntry = {
  createdAt: Scalars['DateTime'];
  /** ID of the object. */
  id: Scalars['ID'];
  name: Scalars['String'];
  referencedBy: Array<ObsidianNote>;
  /** ShortID of the object. */
  shortId: Scalars['ShortID'];
  updatedAt: Scalars['DateTime'];
};

export type ObsidianNote = Identifiable & Node & ObsidianEntry & {
  __typename?: 'ObsidianNote';
  aliases: Array<Scalars['String']>;
  blurb: Maybe<Scalars['String']>;
  content: Maybe<Scalars['String']>;
  createdAt: Scalars['DateTime'];
  /** ID of the object. */
  id: Scalars['ID'];
  modifiedAt: Scalars['DateTime'];
  name: Scalars['String'];
  referencedBy: Array<ObsidianNote>;
  references: Array<ObsidianEntry>;
  /** ShortID of the object. */
  shortId: Scalars['ShortID'];
  tags: Array<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
};

/** The connection type for ObsidianNote. */
export type ObsidianNoteConnection = {
  __typename?: 'ObsidianNoteConnection';
  /** A list of edges. */
  edges: Array<ObsidianNoteEdge>;
  /** A list of nodes. */
  nodes: Array<ObsidianNote>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  totalCount: Scalars['Int'];
};

/** An edge in a connection. */
export type ObsidianNoteEdge = {
  __typename?: 'ObsidianNoteEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['String'];
  /** The item at the end of the edge. */
  node: Maybe<ObsidianNote>;
};

export type ObsidianStub = Identifiable & Node & ObsidianEntry & {
  __typename?: 'ObsidianStub';
  createdAt: Scalars['DateTime'];
  /** ID of the object. */
  id: Scalars['ID'];
  name: Scalars['String'];
  referencedBy: Array<ObsidianNote>;
  /** ShortID of the object. */
  shortId: Scalars['ShortID'];
  updatedAt: Scalars['DateTime'];
};

/** Information about pagination in a connection. */
export type PageInfo = {
  __typename?: 'PageInfo';
  /** When paginating forwards, the cursor to continue. */
  endCursor: Maybe<Scalars['String']>;
  /** When paginating forwards, are there more items? */
  hasNextPage: Scalars['Boolean'];
  /** When paginating backwards, are there more items? */
  hasPreviousPage: Scalars['Boolean'];
  /** When paginating backwards, the cursor to continue. */
  startCursor: Maybe<Scalars['String']>;
};

export type Query = {
  __typename?: 'Query';
  contactEmail: Scalars['String'];
  icloudCredentials: Maybe<ICloudCredentials>;
  /** Fetches an object given its ID. */
  node: Maybe<Node>;
  /** Fetches a list of objects given a list of IDs. */
  nodes: Array<Maybe<Node>>;
  obsidianNote: Maybe<ObsidianNote>;
  obsidianNoteByName: Maybe<ObsidianNote>;
  obsidianNotes: ObsidianNoteConnection;
  /** Kai's JSON Resume (https://jsonresume.org/) */
  resume: Scalars['JSON'];
  testEcho: Scalars['String'];
  /** The currently authenticated user. */
  viewer: Maybe<User>;
};


export type QueryNodeArgs = {
  id: Scalars['ID'];
};


export type QueryNodesArgs = {
  ids: Array<Scalars['ID']>;
};


export type QueryObsidianNoteArgs = {
  id: Scalars['ID'];
};


export type QueryObsidianNoteByNameArgs = {
  name: Scalars['String'];
};


export type QueryObsidianNotesArgs = {
  after?: InputMaybe<Scalars['String']>;
  before?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
  last?: InputMaybe<Scalars['Int']>;
};


export type QueryTestEchoArgs = {
  text?: InputMaybe<Scalars['String']>;
};

export type SpotifyTrack = {
  __typename?: 'SpotifyTrack';
  name: Maybe<Scalars['String']>;
};

export type Subscription = {
  __typename?: 'Subscription';
  currentlyPlaying: Maybe<SpotifyTrack>;
  testSubscription: Scalars['Int'];
};

export type TestModel = {
  __typename?: 'TestModel';
  birthday: Maybe<Scalars['Date']>;
  id: Scalars['ID'];
  name: Scalars['String'];
};

/** Autogenerated input type of TestMutation */
export type TestMutationInput = {
  birthday?: InputMaybe<Scalars['Date']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
};

/** Autogenerated return type of TestMutation. */
export type TestMutationPayload = {
  __typename?: 'TestMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId: Maybe<Scalars['String']>;
  errors: Maybe<Array<ValidationError>>;
  model: Maybe<TestModel>;
};

export type User = Identifiable & Node & {
  __typename?: 'User';
  email: Scalars['String'];
  /** ID of the object. */
  id: Scalars['ID'];
  isOwner: Scalars['Boolean'];
  name: Scalars['String'];
  /** ShortID of the object. */
  shortId: Scalars['ShortID'];
  unconfirmedEmail: Maybe<Scalars['String']>;
};

export type ValidationError = {
  __typename?: 'ValidationError';
  field: Scalars['String'];
  message: Scalars['String'];
};

export type AccountEditPageICloudCredentialsFragment = { __typename?: 'ICloudCredentials', email: string, password: string, session: any | null, cookies: string | null };

export type AccountEditPageQueryVariables = Exact<{ [key: string]: never; }>;


export type AccountEditPageQuery = { __typename?: 'Query', viewer: { __typename?: 'User', id: string, isOwner: boolean, name: string, email: string, unconfirmedEmail: string | null } | null, icloudCredentials: { __typename?: 'ICloudCredentials', id: string, email: string, password: string, session: any | null, cookies: string | null } | null };

export type AccountEditPageViewerFragment = { __typename?: 'User', name: string, email: string, unconfirmedEmail: string | null };

export type AccountEmailFormQueryVariables = Exact<{ [key: string]: never; }>;


export type AccountEmailFormQuery = { __typename?: 'Query', viewer: { __typename?: 'User', id: string, email: string, unconfirmedEmail: string | null } | null };

export type AccountSignInPageQueryVariables = Exact<{ [key: string]: never; }>;


export type AccountSignInPageQuery = { __typename?: 'Query', viewer: { __typename?: 'User', id: string, isOwner: boolean, name: string } | null };

export type AccountSignUpPageQueryVariables = Exact<{ [key: string]: never; }>;


export type AccountSignUpPageQuery = { __typename?: 'Query', viewer: { __typename?: 'User', id: string, isOwner: boolean, name: string } | null };

export type AccountUpdateMutationVariables = Exact<{
  input: AccountUpdateInput;
}>;


export type AccountUpdateMutation = { __typename?: 'Mutation', payload: { __typename?: 'AccountUpdatePayload', user: { __typename?: 'User', id: string } | null, errors: Array<{ __typename?: 'ValidationError', field: string, message: string }> | null } };

export type AppViewerFragment = { __typename?: 'User', id: string, isOwner: boolean, name: string };

export type ContactEmailQueryVariables = Exact<{ [key: string]: never; }>;


export type ContactEmailQuery = { __typename?: 'Query', email: string };

export type CurrentlyPlayingSubscriptionVariables = Exact<{ [key: string]: never; }>;


export type CurrentlyPlayingSubscription = { __typename?: 'Subscription', currentlyPlaying: { __typename?: 'SpotifyTrack', name: string | null } | null };

export type HomeGraphNoteFragment = { __typename?: 'ObsidianNote', id: string, modifiedAt: string, name: string, aliases: Array<string>, tags: Array<string>, blurb: string | null, referencedBy: Array<{ __typename?: 'ObsidianNote', id: string }>, references: Array<{ __typename?: 'ObsidianNote', id: string } | { __typename?: 'ObsidianStub', id: string }> };

export type HomeGraphQueryVariables = Exact<{ [key: string]: never; }>;


export type HomeGraphQuery = { __typename?: 'Query', notesConnection: { __typename?: 'ObsidianNoteConnection', notes: Array<{ __typename?: 'ObsidianNote', id: string, modifiedAt: string, name: string, aliases: Array<string>, tags: Array<string>, blurb: string | null, referencedBy: Array<{ __typename?: 'ObsidianNote', id: string }>, references: Array<{ __typename?: 'ObsidianNote', id: string } | { __typename?: 'ObsidianStub', id: string }> }> } };

export type HomePageQueryVariables = Exact<{ [key: string]: never; }>;


export type HomePageQuery = { __typename?: 'Query', viewer: { __typename?: 'User', id: string, isOwner: boolean, name: string } | null };

export type ICloudCredentialsUpdateMutationVariables = Exact<{
  input: ICloudCredentialsUpdateInput;
}>;


export type ICloudCredentialsUpdateMutation = { __typename?: 'Mutation', payload: { __typename?: 'ICloudCredentialsUpdatePayload', icloudCredentials: { __typename?: 'ICloudCredentials', id: string } | null, errors: Array<{ __typename?: 'ValidationError', field: string, message: string }> | null } };

export type ICloudCredentialsVerifySecurityCodeMutationVariables = Exact<{
  input: ICloudCredentialsVerifySecurityCodeInput;
}>;


export type ICloudCredentialsVerifySecurityCodeMutation = { __typename?: 'Mutation', payload: { __typename?: 'ICloudCredentialsVerifySecurityCodePayload', icloudCredentials: { __typename?: 'ICloudCredentials', id: string } } };

export type ResumePageQueryVariables = Exact<{ [key: string]: never; }>;


export type ResumePageQuery = { __typename?: 'Query', resume: any };

export type TestFeedSubscriptionVariables = Exact<{ [key: string]: never; }>;


export type TestFeedSubscription = { __typename?: 'Subscription', testSubscription: number };

export type TestMutationVariables = Exact<{
  input: TestMutationInput;
}>;


export type TestMutation = { __typename?: 'Mutation', testMutation: { __typename?: 'TestMutationPayload', model: { __typename?: 'TestModel', id: string, name: string, birthday: string | null } | null, errors: Array<{ __typename?: 'ValidationError', field: string, message: string }> | null } };

export type TestPageQueryVariables = Exact<{
  name: Scalars['String'];
}>;


export type TestPageQuery = { __typename?: 'Query', testEcho: string, viewer: { __typename?: 'User', id: string, isOwner: boolean, name: string } | null };

export type WorkPageQueryVariables = Exact<{ [key: string]: never; }>;


export type WorkPageQuery = { __typename?: 'Query', viewer: { __typename?: 'User', id: string, isOwner: boolean, name: string } | null };

export const AccountEditPageICloudCredentialsFragment = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AccountEditPageICloudCredentialsFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ICloudCredentials"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"password"}},{"kind":"Field","name":{"kind":"Name","value":"session"}},{"kind":"Field","name":{"kind":"Name","value":"cookies"}}]}}]} as unknown as DocumentNode<AccountEditPageICloudCredentialsFragment, unknown>;
export const AccountEditPageViewerFragment = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AccountEditPageViewerFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"User"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"unconfirmedEmail"}}]}}]} as unknown as DocumentNode<AccountEditPageViewerFragment, unknown>;
export const AppViewerFragment = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"AppViewerFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"User"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"isOwner"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]} as unknown as DocumentNode<AppViewerFragment, unknown>;
export const HomeGraphNoteFragment = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"HomeGraphNoteFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ObsidianNote"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"modifiedAt"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"aliases"}},{"kind":"Field","name":{"kind":"Name","value":"tags"}},{"kind":"Field","name":{"kind":"Name","value":"blurb"}},{"kind":"Field","name":{"kind":"Name","value":"referencedBy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"references"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<HomeGraphNoteFragment, unknown>;
export const AccountEditPageQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AccountEditPageQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"viewer"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AppViewerFragment"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AccountEditPageViewerFragment"}}]}},{"kind":"Field","name":{"kind":"Name","value":"icloudCredentials"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AccountEditPageICloudCredentialsFragment"}}]}}]}},...AppViewerFragment.definitions,...AccountEditPageViewerFragment.definitions,...AccountEditPageICloudCredentialsFragment.definitions]} as unknown as DocumentNode<AccountEditPageQuery, AccountEditPageQueryVariables>;
export const AccountEmailFormQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AccountEmailFormQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"viewer"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"unconfirmedEmail"}}]}}]}}]} as unknown as DocumentNode<AccountEmailFormQuery, AccountEmailFormQueryVariables>;
export const AccountSignInPageQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AccountSignInPageQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"viewer"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AppViewerFragment"}}]}}]}},...AppViewerFragment.definitions]} as unknown as DocumentNode<AccountSignInPageQuery, AccountSignInPageQueryVariables>;
export const AccountSignUpPageQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AccountSignUpPageQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"viewer"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AppViewerFragment"}}]}}]}},...AppViewerFragment.definitions]} as unknown as DocumentNode<AccountSignUpPageQuery, AccountSignUpPageQueryVariables>;
export const AccountUpdateMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"AccountUpdateMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"AccountUpdateInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"accountUpdate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"field"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]} as unknown as DocumentNode<AccountUpdateMutation, AccountUpdateMutationVariables>;
export const ContactEmailQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ContactEmailQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"email"},"name":{"kind":"Name","value":"contactEmail"}}]}}]} as unknown as DocumentNode<ContactEmailQuery, ContactEmailQueryVariables>;
export const CurrentlyPlayingSubscriptionDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"subscription","name":{"kind":"Name","value":"CurrentlyPlayingSubscription"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentlyPlaying"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]} as unknown as DocumentNode<CurrentlyPlayingSubscription, CurrentlyPlayingSubscriptionVariables>;
export const HomeGraphQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"HomeGraphQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"notesConnection"},"name":{"kind":"Name","value":"obsidianNotes"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"IntValue","value":"40"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"notes"},"name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"HomeGraphNoteFragment"}}]}}]}}]}},...HomeGraphNoteFragment.definitions]} as unknown as DocumentNode<HomeGraphQuery, HomeGraphQueryVariables>;
export const HomePageQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"HomePageQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"viewer"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AppViewerFragment"}}]}}]}},...AppViewerFragment.definitions]} as unknown as DocumentNode<HomePageQuery, HomePageQueryVariables>;
export const ICloudCredentialsUpdateMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"ICloudCredentialsUpdateMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ICloudCredentialsUpdateInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"icloudCredentialsUpdate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"icloudCredentials"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"field"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]} as unknown as DocumentNode<ICloudCredentialsUpdateMutation, ICloudCredentialsUpdateMutationVariables>;
export const ICloudCredentialsVerifySecurityCodeMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"ICloudCredentialsVerifySecurityCodeMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ICloudCredentialsVerifySecurityCodeInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"payload"},"name":{"kind":"Name","value":"icloudCredentialsVerifySecurityCode"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"icloudCredentials"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}}]} as unknown as DocumentNode<ICloudCredentialsVerifySecurityCodeMutation, ICloudCredentialsVerifySecurityCodeMutationVariables>;
export const ResumePageQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ResumePageQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"resume"}}]}}]} as unknown as DocumentNode<ResumePageQuery, ResumePageQueryVariables>;
export const TestFeedSubscriptionDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"subscription","name":{"kind":"Name","value":"TestFeedSubscription"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"testSubscription"}}]}}]} as unknown as DocumentNode<TestFeedSubscription, TestFeedSubscriptionVariables>;
export const TestMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"TestMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"TestMutationInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"testMutation"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"model"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"birthday"}}]}},{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"field"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]} as unknown as DocumentNode<TestMutation, TestMutationVariables>;
export const TestPageQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"TestPageQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"name"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"testEcho"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"text"},"value":{"kind":"Variable","name":{"kind":"Name","value":"name"}}}]},{"kind":"Field","name":{"kind":"Name","value":"viewer"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AppViewerFragment"}}]}}]}},...AppViewerFragment.definitions]} as unknown as DocumentNode<TestPageQuery, TestPageQueryVariables>;
export const WorkPageQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"WorkPageQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"viewer"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"AppViewerFragment"}}]}}]}},...AppViewerFragment.definitions]} as unknown as DocumentNode<WorkPageQuery, WorkPageQueryVariables>;