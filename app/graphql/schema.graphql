"""
Requires that exactly one field must be supplied and that field must not be `null`.
"""
directive @oneOf on INPUT_OBJECT

"""An ISO 8601-encoded date"""
scalar Date

"""Represents untyped JSON"""
scalar JSON

type Mutation {
  testMutation(
    """Parameters for TestMutation"""
    input: TestMutationInput!
  ): TestMutationPayload
}

"""An object with an ID."""
interface Node {
  """ID of the object."""
  id: ID!
}

type Query {
  contactEmail: String!

  """Fetches an object given its ID."""
  node(
    """ID of the object."""
    id: ID!
  ): Node

  """Fetches a list of objects given a list of IDs."""
  nodes(
    """IDs of the objects."""
    ids: [ID!]!
  ): [Node]!

  """Kai's JSON Resume (https://jsonresume.org/)"""
  resume: JSON!
  testEcho(text: String): String!

  """The currently authenticated user."""
  viewer: User
}

type SpotifyTrack {
  name: String
}

type Subscription {
  currentlyPlaying: SpotifyTrack
  testSubscription: Int!
}

type TestModel {
  birthday: Date
  id: ID!
  name: String!
}

"""Autogenerated input type of TestMutation"""
input TestMutationInput {
  birthday: Date

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  name: String!
}

"""Autogenerated return type of TestMutation"""
type TestMutationPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [ValidationError!]
  model: TestModel
}

type User implements Node {
  email: String!
  id: ID!
  name: String!
}

type ValidationError {
  field: String
  message: String
}