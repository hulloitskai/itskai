export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** An ISO 8601-encoded date */
  Date: { input: string; output: string; }
  /** An ISO 8601-encoded datetime */
  DateTime: { input: string; output: string; }
  /** Represents untyped JSON */
  JSON: { input: any; output: any; }
};

/** Autogenerated input type of ActivateScottkitSignal */
export type ActivateScottkitSignalInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  signal: ScottkitSignal;
};

/** Autogenerated return type of ActivateScottkitSignal. */
export type ActivateScottkitSignalPayload = {
  __typename?: 'ActivateScottkitSignalPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of ActivateSpotifyJamSession */
export type ActivateSpotifyJamSessionInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of ActivateSpotifyJamSession. */
export type ActivateSpotifyJamSessionPayload = {
  __typename?: 'ActivateSpotifyJamSessionPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  session: SpotifyJamSession;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of AddJournalEntryComment */
export type AddJournalEntryCommentInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  entryId: Scalars['ID']['input'];
  text: Scalars['String']['input'];
};

/** Autogenerated return type of AddJournalEntryComment. */
export type AddJournalEntryCommentPayload = {
  __typename?: 'AddJournalEntryCommentPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  comment: NotionComment;
  success: Scalars['Boolean']['output'];
};

export type Coordinates = {
  __typename?: 'Coordinates';
  latitude: Scalars['Float']['output'];
  longitude: Scalars['Float']['output'];
};

/** Autogenerated input type of CreateDishwatcherDevice */
export type CreateDishwatcherDeviceInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
};

/** Autogenerated return type of CreateDishwatcherDevice. */
export type CreateDishwatcherDevicePayload = {
  __typename?: 'CreateDishwatcherDevicePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  device?: Maybe<DishwatcherDevice>;
  errors?: Maybe<Array<InputFieldError>>;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of CreateICloudConnection */
export type CreateICloudConnectionInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  email: Scalars['String']['input'];
  password: Scalars['String']['input'];
};

/** Autogenerated return type of CreateICloudConnection. */
export type CreateICloudConnectionPayload = {
  __typename?: 'CreateICloudConnectionPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  requires2fa: Scalars['Boolean']['output'];
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of CreateLocationAccessGrant */
export type CreateLocationAccessGrantInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  expiresInSeconds: Scalars['Int']['input'];
  password?: InputMaybe<Scalars['String']['input']>;
  recipient: Scalars['String']['input'];
};

/** Autogenerated return type of CreateLocationAccessGrant. */
export type CreateLocationAccessGrantPayload = {
  __typename?: 'CreateLocationAccessGrantPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors?: Maybe<Array<InputFieldError>>;
  grant?: Maybe<LocationAccessGrant>;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of CreateLocationAccess */
export type CreateLocationAccessInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  password: Scalars['String']['input'];
};

/** Autogenerated return type of CreateLocationAccess. */
export type CreateLocationAccessPayload = {
  __typename?: 'CreateLocationAccessPayload';
  access: LocationAccess;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of CreateTimelinePhotoWithTimestamp */
export type CreateTimelinePhotoWithTimestampInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  photo: UploadInput;
  timestamp: Scalars['DateTime']['input'];
};

/** Autogenerated return type of CreateTimelinePhotoWithTimestamp. */
export type CreateTimelinePhotoWithTimestampPayload = {
  __typename?: 'CreateTimelinePhotoWithTimestampPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors?: Maybe<Array<InputFieldError>>;
  photo?: Maybe<TimelinePhoto>;
  success: Scalars['Boolean']['output'];
};

export type CurrentlyPlaying = {
  __typename?: 'CurrentlyPlaying';
  progressMilliseconds: Scalars['Int']['output'];
  timestamp: Scalars['DateTime']['output'];
  track: SpotifyTrack;
};

/** Autogenerated input type of DeleteGoogleConnection */
export type DeleteGoogleConnectionInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of DeleteGoogleConnection. */
export type DeleteGoogleConnectionPayload = {
  __typename?: 'DeleteGoogleConnectionPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of DeleteICloudConnection */
export type DeleteICloudConnectionInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of DeleteICloudConnection. */
export type DeleteICloudConnectionPayload = {
  __typename?: 'DeleteICloudConnectionPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of DeleteLocationAccessGrant */
export type DeleteLocationAccessGrantInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  grantId: Scalars['ID']['input'];
};

/** Autogenerated return type of DeleteLocationAccessGrant. */
export type DeleteLocationAccessGrantPayload = {
  __typename?: 'DeleteLocationAccessGrantPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of DeleteSpotifyConnection */
export type DeleteSpotifyConnectionInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of DeleteSpotifyConnection. */
export type DeleteSpotifyConnectionPayload = {
  __typename?: 'DeleteSpotifyConnectionPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

export type DishwatcherDevice = Node & {
  __typename?: 'DishwatcherDevice';
  createdAt: Scalars['DateTime']['output'];
  /** ID of the object. */
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  secretKey: Scalars['String']['output'];
};

export type ICloudConnection = {
  __typename?: 'ICloudConnection';
  credentials?: Maybe<ICloudCredentials>;
  status: ICloudConnectionStatus;
};

export enum ICloudConnectionStatus {
  Connected = 'CONNECTED',
  Disconnected = 'DISCONNECTED',
  Requires_2Fa = 'REQUIRES_2FA'
}

export type ICloudCredentials = Node & {
  __typename?: 'ICloudCredentials';
  cookies?: Maybe<Scalars['String']['output']>;
  email: Scalars['String']['output'];
  /** ID of the object. */
  id: Scalars['ID']['output'];
  password: Scalars['String']['output'];
  session?: Maybe<Scalars['JSON']['output']>;
};

export type Image = Node & Upload & {
  __typename?: 'Image';
  byteSize: Scalars['Int']['output'];
  filename: Scalars['String']['output'];
  /** ID of the object. */
  id: Scalars['ID']['output'];
  signedId: Scalars['String']['output'];
  src: Scalars['String']['output'];
  url: Scalars['String']['output'];
};


export type ImageSrcArgs = {
  size?: InputMaybe<ImageSize>;
};

export enum ImageSize {
  Lg = 'LG',
  Md = 'MD',
  Sm = 'SM'
}

/** Autogenerated input type of ImportTimelineActivities */
export type ImportTimelineActivitiesInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  locationHistory: UploadInput;
};

/** Autogenerated return type of ImportTimelineActivities. */
export type ImportTimelineActivitiesPayload = {
  __typename?: 'ImportTimelineActivitiesPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  importCount: Scalars['Int']['output'];
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of ImportTimelinePhotos */
export type ImportTimelinePhotosInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  photos: Array<UploadInput>;
};

/** Autogenerated return type of ImportTimelinePhotos. */
export type ImportTimelinePhotosPayload = {
  __typename?: 'ImportTimelinePhotosPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  importCount: Scalars['Int']['output'];
  success: Scalars['Boolean']['output'];
};

export type InputFieldError = {
  __typename?: 'InputFieldError';
  field: Scalars['String']['output'];
  message: Scalars['String']['output'];
};

export type JournalEntry = Node & {
  __typename?: 'JournalEntry';
  content: Array<Scalars['JSON']['output']>;
  /** ID of the object. */
  id: Scalars['ID']['output'];
  lastEditedAt: Scalars['DateTime']['output'];
  nextEntryId?: Maybe<Scalars['ID']['output']>;
  startedAt: Scalars['DateTime']['output'];
  title: Scalars['String']['output'];
  url: Scalars['String']['output'];
};

export type JourneysSession = Node & {
  __typename?: 'JourneysSession';
  /** ID of the object. */
  id: Scalars['ID']['output'];
  participations: Array<JourneysSessionParticipation>;
  startedAt: Scalars['DateTime']['output'];
  url: Scalars['String']['output'];
  viewerParticipation?: Maybe<JourneysSessionParticipation>;
};

/** The connection type for JourneysSession. */
export type JourneysSessionConnection = {
  __typename?: 'JourneysSessionConnection';
  /** A list of edges. */
  edges: Array<JourneysSessionEdge>;
  /** A list of nodes. */
  nodes: Array<JourneysSession>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type JourneysSessionEdge = {
  __typename?: 'JourneysSessionEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge. */
  node: JourneysSession;
};

export type JourneysSessionParticipation = Node & {
  __typename?: 'JourneysSessionParticipation';
  goal: Scalars['String']['output'];
  /** ID of the object. */
  id: Scalars['ID']['output'];
  participantIsViewer: Scalars['Boolean']['output'];
  participantName: Scalars['String']['output'];
  session: Array<JourneysSession>;
};

/** Autogenerated input type of LeaveJourneysSession */
export type LeaveJourneysSessionInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  participationId: Scalars['ID']['input'];
};

/** Autogenerated return type of LeaveJourneysSession. */
export type LeaveJourneysSessionPayload = {
  __typename?: 'LeaveJourneysSessionPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  session?: Maybe<JourneysSession>;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of LikePensieveMessage */
export type LikePensieveMessageInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  messageId: Scalars['ID']['input'];
};

/** Autogenerated return type of LikePensieveMessage. */
export type LikePensieveMessagePayload = {
  __typename?: 'LikePensieveMessagePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  message: PensieveMessage;
  success: Scalars['Boolean']['output'];
};

export type LocationAccess = Node & {
  __typename?: 'LocationAccess';
  grant: LocationAccessGrant;
  /** ID of the object. */
  id: Scalars['ID']['output'];
  timestamp: Scalars['DateTime']['output'];
  token: Scalars['String']['output'];
};

export type LocationAccessGrant = Node & {
  __typename?: 'LocationAccessGrant';
  createdAt: Scalars['DateTime']['output'];
  expiresAt: Scalars['DateTime']['output'];
  /** ID of the object. */
  id: Scalars['ID']['output'];
  locateUrl: Scalars['String']['output'];
  password: Scalars['String']['output'];
  recipient: Scalars['String']['output'];
};

export type LocationDetails = {
  __typename?: 'LocationDetails';
  address: Scalars['String']['output'];
  coordinates: Coordinates;
  expiresAt: Scalars['DateTime']['output'];
  trail: Array<LocationTrailMarker>;
};

export type LocationLog = Node & {
  __typename?: 'LocationLog';
  approximateAddress: Scalars['String']['output'];
  approximateCoordinates: Coordinates;
  details: LocationDetails;
  googleMapsAreaUrl: Scalars['String']['output'];
  /** ID of the object. */
  id: Scalars['ID']['output'];
  timestamp: Scalars['DateTime']['output'];
};


export type LocationLogDetailsArgs = {
  accessToken: Scalars['String']['input'];
};

export type LocationTrailMarker = {
  __typename?: 'LocationTrailMarker';
  coordinates: Coordinates;
  id: Scalars['ID']['output'];
  timestamp: Scalars['DateTime']['output'];
};

export type LyricLine = {
  __typename?: 'LyricLine';
  startTimeMilliseconds: Scalars['Int']['output'];
  words: Scalars['String']['output'];
};

export type Mutation = {
  __typename?: 'Mutation';
  activateScottkitSignal: ActivateScottkitSignalPayload;
  activateSpotifyJamSession: ActivateSpotifyJamSessionPayload;
  addJournalEntryComment: AddJournalEntryCommentPayload;
  createDishwatchDevice: CreateDishwatcherDevicePayload;
  createICloudConnection: CreateICloudConnectionPayload;
  createLocationAccess: CreateLocationAccessPayload;
  createLocationAccessGrant: CreateLocationAccessGrantPayload;
  createTimelinePhotoWithTimestamp: CreateTimelinePhotoWithTimestampPayload;
  deleteGoogleConnection: DeleteGoogleConnectionPayload;
  deleteICloudConnection: DeleteICloudConnectionPayload;
  deleteLocationAccessGrant: DeleteLocationAccessGrantPayload;
  deleteSpotifyConnection: DeleteSpotifyConnectionPayload;
  importTimelineActivities: ImportTimelineActivitiesPayload;
  importTimelinePhotos: ImportTimelinePhotosPayload;
  leaveJourneysSession: LeaveJourneysSessionPayload;
  likePensieveMessage: LikePensieveMessagePayload;
  requestUserEmailVerification: RequestUserEmailVerificationPayload;
  requestUserPasswordReset: RequestUserPasswordResetPayload;
  sendPensieveMessage: SendPensieveMessagePayload;
  syncJournalEntries: SyncJournalEntriesPayload;
  syncLocationLogs: SyncLocationLogsPayload;
  testMutation: TestMutationPayload;
  unlikePensieveMessage: UnlikePensieveMessagePayload;
  updateDishwatchDevice: UpdateDishwatchDevicePayload;
  updateJourneysSessionParticipation: UpdateJourneysSessionParticipationPayload;
  updateUserEmail: UpdateUserEmailPayload;
  updateUserProfile: UpdateUserProfilePayload;
  verifyICloudSecurityCode: VerifyICloudSecurityCodePayload;
};


export type MutationActivateScottkitSignalArgs = {
  input: ActivateScottkitSignalInput;
};


export type MutationActivateSpotifyJamSessionArgs = {
  input: ActivateSpotifyJamSessionInput;
};


export type MutationAddJournalEntryCommentArgs = {
  input: AddJournalEntryCommentInput;
};


export type MutationCreateDishwatchDeviceArgs = {
  input: CreateDishwatcherDeviceInput;
};


export type MutationCreateICloudConnectionArgs = {
  input: CreateICloudConnectionInput;
};


export type MutationCreateLocationAccessArgs = {
  input: CreateLocationAccessInput;
};


export type MutationCreateLocationAccessGrantArgs = {
  input: CreateLocationAccessGrantInput;
};


export type MutationCreateTimelinePhotoWithTimestampArgs = {
  input: CreateTimelinePhotoWithTimestampInput;
};


export type MutationDeleteGoogleConnectionArgs = {
  input: DeleteGoogleConnectionInput;
};


export type MutationDeleteICloudConnectionArgs = {
  input: DeleteICloudConnectionInput;
};


export type MutationDeleteLocationAccessGrantArgs = {
  input: DeleteLocationAccessGrantInput;
};


export type MutationDeleteSpotifyConnectionArgs = {
  input: DeleteSpotifyConnectionInput;
};


export type MutationImportTimelineActivitiesArgs = {
  input: ImportTimelineActivitiesInput;
};


export type MutationImportTimelinePhotosArgs = {
  input: ImportTimelinePhotosInput;
};


export type MutationLeaveJourneysSessionArgs = {
  input: LeaveJourneysSessionInput;
};


export type MutationLikePensieveMessageArgs = {
  input: LikePensieveMessageInput;
};


export type MutationRequestUserEmailVerificationArgs = {
  input: RequestUserEmailVerificationInput;
};


export type MutationRequestUserPasswordResetArgs = {
  input: RequestUserPasswordResetInput;
};


export type MutationSendPensieveMessageArgs = {
  input: SendPensieveMessageInput;
};


export type MutationSyncJournalEntriesArgs = {
  input: SyncJournalEntriesInput;
};


export type MutationSyncLocationLogsArgs = {
  input: SyncLocationLogsInput;
};


export type MutationTestMutationArgs = {
  input: TestMutationInput;
};


export type MutationUnlikePensieveMessageArgs = {
  input: UnlikePensieveMessageInput;
};


export type MutationUpdateDishwatchDeviceArgs = {
  input: UpdateDishwatchDeviceInput;
};


export type MutationUpdateJourneysSessionParticipationArgs = {
  input: UpdateJourneysSessionParticipationInput;
};


export type MutationUpdateUserEmailArgs = {
  input: UpdateUserEmailInput;
};


export type MutationUpdateUserProfileArgs = {
  input: UpdateUserProfileInput;
};


export type MutationVerifyICloudSecurityCodeArgs = {
  input: VerifyICloudSecurityCodeInput;
};

/** An object with an ID. */
export type Node = {
  /** ID of the object. */
  id: Scalars['ID']['output'];
};

export type NotionComment = {
  __typename?: 'NotionComment';
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  modifiedAt: Scalars['DateTime']['output'];
  richText: Scalars['JSON']['output'];
};

export type OAuthConnection = {
  __typename?: 'OAuthConnection';
  credentials?: Maybe<OAuthCredentials>;
  status: OAuthConnectionStatus;
};

export enum OAuthConnectionStatus {
  Connected = 'CONNECTED',
  Disconnected = 'DISCONNECTED'
}

export type OAuthCredentials = Node & {
  __typename?: 'OAuthCredentials';
  /** ID of the object. */
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  refreshToken?: Maybe<Scalars['String']['output']>;
  uid: Scalars['String']['output'];
};

/** Information about pagination in a connection. */
export type PageInfo = {
  __typename?: 'PageInfo';
  /** When paginating forwards, the cursor to continue. */
  endCursor?: Maybe<Scalars['String']['output']>;
  /** When paginating forwards, are there more items? */
  hasNextPage: Scalars['Boolean']['output'];
  /** When paginating backwards, are there more items? */
  hasPreviousPage: Scalars['Boolean']['output'];
  /** When paginating backwards, the cursor to continue. */
  startCursor?: Maybe<Scalars['String']['output']>;
};

export type PensieveMessage = Node & {
  __typename?: 'PensieveMessage';
  from: PensieveMessageSender;
  /** ID of the object. */
  id: Scalars['ID']['output'];
  isEdited: Scalars['Boolean']['output'];
  likedByViewer: Scalars['Boolean']['output'];
  likes: Scalars['Int']['output'];
  text: Scalars['String']['output'];
  timestamp: Scalars['DateTime']['output'];
};

export enum PensieveMessageSender {
  Bot = 'BOT',
  User = 'USER'
}

export type Query = {
  __typename?: 'Query';
  activityStatus?: Maybe<Scalars['String']['output']>;
  announcement?: Maybe<Scalars['String']['output']>;
  bootedAt: Scalars['DateTime']['output'];
  contactEmail: Scalars['String']['output'];
  currentlyPlaying?: Maybe<CurrentlyPlaying>;
  explorations: Array<Scalars['String']['output']>;
  googleConnection: OAuthConnection;
  icloudConnection: ICloudConnection;
  imageBySignedId?: Maybe<Image>;
  journalEntry?: Maybe<JournalEntry>;
  journalEntryComments: Array<NotionComment>;
  journeysSession?: Maybe<JourneysSession>;
  journeysSessionParticipation?: Maybe<JourneysSessionParticipation>;
  journeysSessions: JourneysSessionConnection;
  location?: Maybe<LocationLog>;
  locationAccessGrants: Array<LocationAccessGrant>;
  passwordStrength: Scalars['Float']['output'];
  pensieveMessages: Array<PensieveMessage>;
  resume?: Maybe<Scalars['JSON']['output']>;
  spotifyConnection: OAuthConnection;
  testEcho: Scalars['String']['output'];
  timelineActivities: Array<TimelineActivity>;
  timezone: Timezone;
  uploadBySignedId?: Maybe<Image>;
  user?: Maybe<User>;
  viewer?: Maybe<User>;
};


export type QueryImageBySignedIdArgs = {
  signedId: Scalars['String']['input'];
};


export type QueryJournalEntryArgs = {
  id: Scalars['ID']['input'];
};


export type QueryJournalEntryCommentsArgs = {
  entryId: Scalars['ID']['input'];
};


export type QueryJourneysSessionArgs = {
  id: Scalars['ID']['input'];
};


export type QueryJourneysSessionParticipationArgs = {
  id: Scalars['ID']['input'];
};


export type QueryJourneysSessionsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryPasswordStrengthArgs = {
  password: Scalars['String']['input'];
};


export type QueryPensieveMessagesArgs = {
  to?: InputMaybe<Scalars['String']['input']>;
};


export type QueryResumeArgs = {
  variant?: InputMaybe<Scalars['String']['input']>;
};


export type QueryTestEchoArgs = {
  text?: InputMaybe<Scalars['String']['input']>;
};


export type QueryTimelineActivitiesArgs = {
  after: Scalars['DateTime']['input'];
  before: Scalars['DateTime']['input'];
};


export type QueryUploadBySignedIdArgs = {
  signedId: Scalars['String']['input'];
};


export type QueryUserArgs = {
  id: Scalars['ID']['input'];
};

/** Autogenerated input type of RequestUserEmailVerification */
export type RequestUserEmailVerificationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  email: Scalars['String']['input'];
};

/** Autogenerated return type of RequestUserEmailVerification. */
export type RequestUserEmailVerificationPayload = {
  __typename?: 'RequestUserEmailVerificationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of RequestUserPasswordReset */
export type RequestUserPasswordResetInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  email: Scalars['String']['input'];
};

/** Autogenerated return type of RequestUserPasswordReset. */
export type RequestUserPasswordResetPayload = {
  __typename?: 'RequestUserPasswordResetPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

export enum ScottkitSignal {
  Break = 'BREAK',
  Panic = 'PANIC',
  Rand = 'RAND'
}

/** Autogenerated input type of SendPensieveMessage */
export type SendPensieveMessageInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  text: Scalars['String']['input'];
};

/** Autogenerated return type of SendPensieveMessage. */
export type SendPensieveMessagePayload = {
  __typename?: 'SendPensieveMessagePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
  user: PensieveMessage;
};

export type SpotifyAlbum = {
  __typename?: 'SpotifyAlbum';
  id: Scalars['String']['output'];
  imageUrl?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  url: Scalars['String']['output'];
};

export type SpotifyArtist = {
  __typename?: 'SpotifyArtist';
  id: Scalars['String']['output'];
  name: Scalars['String']['output'];
  url: Scalars['String']['output'];
};

export type SpotifyJamSession = {
  __typename?: 'SpotifyJamSession';
  id: Scalars['String']['output'];
  joinUrl: Scalars['String']['output'];
};

export type SpotifyTrack = {
  __typename?: 'SpotifyTrack';
  album: SpotifyAlbum;
  artists: Array<SpotifyArtist>;
  durationMilliseconds: Scalars['Int']['output'];
  id: Scalars['String']['output'];
  lyrics?: Maybe<Array<LyricLine>>;
  name: Scalars['String']['output'];
  url: Scalars['String']['output'];
};

export type Subscription = {
  __typename?: 'Subscription';
  activityStatus?: Maybe<Scalars['String']['output']>;
  currentlyPlaying?: Maybe<CurrentlyPlaying>;
  journeysSessionParticipation?: Maybe<JourneysSessionParticipation>;
  location?: Maybe<LocationLog>;
  pensieveMessage?: Maybe<PensieveMessage>;
  testSubscription: Scalars['Int']['output'];
};


export type SubscriptionJourneysSessionParticipationArgs = {
  sessionId: Scalars['ID']['input'];
};


export type SubscriptionPensieveMessageArgs = {
  to?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of SyncJournalEntries */
export type SyncJournalEntriesInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of SyncJournalEntries. */
export type SyncJournalEntriesPayload = {
  __typename?: 'SyncJournalEntriesPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of SyncLocationLogs */
export type SyncLocationLogsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of SyncLocationLogs. */
export type SyncLocationLogsPayload = {
  __typename?: 'SyncLocationLogsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

export type TestModel = {
  __typename?: 'TestModel';
  birthday?: Maybe<Scalars['Date']['output']>;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

/** Autogenerated input type of TestMutation */
export type TestMutationInput = {
  birthday?: InputMaybe<Scalars['Date']['input']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
};

/** Autogenerated return type of TestMutation. */
export type TestMutationPayload = {
  __typename?: 'TestMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors?: Maybe<Array<InputFieldError>>;
  model?: Maybe<TestModel>;
  success: Scalars['Boolean']['output'];
};

export type TimelineActivity = Node & {
  __typename?: 'TimelineActivity';
  address?: Maybe<Scalars['String']['output']>;
  distanceMeters: Scalars['Float']['output'];
  endedAt: Scalars['DateTime']['output'];
  /** ID of the object. */
  id: Scalars['ID']['output'];
  location: Scalars['JSON']['output'];
  movementSpeedMetersPerSecond: Scalars['Float']['output'];
  name?: Maybe<Scalars['String']['output']>;
  photos: Array<TimelinePhoto>;
  startedAt: Scalars['DateTime']['output'];
  timezone: Timezone;
  timezoneName: Scalars['String']['output'];
  type: TimelineActivityType;
};

export enum TimelineActivityType {
  ActivitySegment = 'ACTIVITY_SEGMENT',
  PlaceVisit = 'PLACE_VISIT'
}

export type TimelinePhoto = Node & {
  __typename?: 'TimelinePhoto';
  coordinates?: Maybe<Coordinates>;
  /** ID of the object. */
  id: Scalars['ID']['output'];
  image: Image;
  takenAt: Scalars['DateTime']['output'];
};

export type Timezone = {
  __typename?: 'Timezone';
  abbreviation: Scalars['String']['output'];
  name: Scalars['String']['output'];
  offset: Scalars['String']['output'];
  offsetMinutes: Scalars['Int']['output'];
};

/** Autogenerated input type of UnlikePensieveMessage */
export type UnlikePensieveMessageInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  messageId: Scalars['ID']['input'];
};

/** Autogenerated return type of UnlikePensieveMessage. */
export type UnlikePensieveMessagePayload = {
  __typename?: 'UnlikePensieveMessagePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  message: PensieveMessage;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of UpdateDishwatchDevice */
export type UpdateDishwatchDeviceInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  deviceId: Scalars['ID']['input'];
  name: Scalars['String']['input'];
};

/** Autogenerated return type of UpdateDishwatchDevice. */
export type UpdateDishwatchDevicePayload = {
  __typename?: 'UpdateDishwatchDevicePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  device?: Maybe<DishwatcherDevice>;
  errors?: Maybe<Array<InputFieldError>>;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of UpdateJourneysSessionParticipation */
export type UpdateJourneysSessionParticipationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  goal: Scalars['String']['input'];
  participantName: Scalars['String']['input'];
  participationId: Scalars['ID']['input'];
};

/** Autogenerated return type of UpdateJourneysSessionParticipation. */
export type UpdateJourneysSessionParticipationPayload = {
  __typename?: 'UpdateJourneysSessionParticipationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors?: Maybe<Array<InputFieldError>>;
  participation?: Maybe<JourneysSessionParticipation>;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of UpdateUserEmail */
export type UpdateUserEmailInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  currentPassword: Scalars['String']['input'];
  email: Scalars['String']['input'];
};

/** Autogenerated return type of UpdateUserEmail. */
export type UpdateUserEmailPayload = {
  __typename?: 'UpdateUserEmailPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors?: Maybe<Array<InputFieldError>>;
  success: Scalars['Boolean']['output'];
  user?: Maybe<User>;
};

/** Autogenerated input type of UpdateUserProfile */
export type UpdateUserProfileInput = {
  avatar?: InputMaybe<UploadInput>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
};

/** Autogenerated return type of UpdateUserProfile. */
export type UpdateUserProfilePayload = {
  __typename?: 'UpdateUserProfilePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors?: Maybe<Array<InputFieldError>>;
  success: Scalars['Boolean']['output'];
  user?: Maybe<User>;
};

export type Upload = {
  byteSize: Scalars['Int']['output'];
  filename: Scalars['String']['output'];
  signedId: Scalars['String']['output'];
  url: Scalars['String']['output'];
};

export type UploadInput = {
  signedId: Scalars['String']['input'];
};

export type User = Node & {
  __typename?: 'User';
  avatar?: Maybe<Image>;
  email: Scalars['String']['output'];
  /** ID of the object. */
  id: Scalars['ID']['output'];
  isOwner: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  unverifiedEmail?: Maybe<Scalars['String']['output']>;
};

/** Autogenerated input type of VerifyICloudSecurityCode */
export type VerifyICloudSecurityCodeInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  code: Scalars['String']['input'];
};

/** Autogenerated return type of VerifyICloudSecurityCode. */
export type VerifyICloudSecurityCodePayload = {
  __typename?: 'VerifyICloudSecurityCodePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};
