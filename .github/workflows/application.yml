name: application
on: ["push", "pull_request"]
env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Deploy
        run: flyctl deploy --remote-only --detach

  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
          cache: yarn
          cache-dependency-path: "**/yarn.lock"
      - name: Install dependencies
        run: bundle install
      - name: Check formatting
        run: bin/fmt
      - name: Check lints
        run: bin/lint

  notify:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Install Ruby dependencies
        run: bundle install
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
          cache: yarn
          cache-dependency-path: "**/yarn.lock"
      - name: Install Node dependencies
        run: yarn install
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version-file: .python-version
          cache: pip
      - name: Install Python dependencies
        run: pip install -r requirements.txt
      - name: Compile assets
        run: bundle exec rails assets:precompile
      - name: Locate files
        id: locate_files
        run: |
          cd public
          echo "minified_file=$(echo dist/application*.js)" >> $GITHUB_OUTPUT
          echo "source_map=$(echo dist/application*.map)" >> $GITHUB_OUTPUT
      - name: Upload sourcemap
        uses: honeybadger-io/github-upload-sourcemap-action@master
        with:
          api_key: ${{ secrets.HONEYBADGER_CLIENT_API_KEY }}
          minified_url: https://itskai.me/${{ steps.locate_files.outputs.minified_file }}
          minified_file: public/${{ steps.locate_files.outputs.minified_file }}
          source_map: public/${{ steps.locate_files.outputs.source_map }}
      - name: Notify server deploy
        uses: honeybadger-io/github-notify-deploy-action@v1
        with:
          api_key: ${{ secrets.HONEYBADGER_SERVER_API_KEY }}
      - name: Notify client deploy
        uses: honeybadger-io/github-notify-deploy-action@v1
        with:
          api_key: ${{ secrets.HONEYBADGER_CLIENT_API_KEY }}
