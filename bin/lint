#!/usr/bin/env ruby
# frozen_string_literal: true

# == Dependencies ==
system("bundle", "install", "--quiet") ||
  abort("Failed to install Ruby dependencies")
system("yarn", "install", "--silent") ||
  abort("Failed to install Node dependencies")

# == Command ==
require "optparse"

options = {}

OptionParser.new do |opts|
  opts.banner = "Usage: bin/lint [--fix] <targets...>"
  opts.on(
    "--fix",
    "Auto-fix code offences without correcting them",
  ) { |check| options[:check] = check }
end.parse!

def scoped(&block)
  yield
end

puts "== rubocop =="
scoped do
  args = []
  args << "--auto-correct" if options[:fix]
  system(
    "bundle",
    "exec",
    "rubocop",
    *args,
  )
end

puts "\n== eslint =="
scoped do
  args = %w[--ext .js,.jsx,.ts,.tsx]
  args << "--fix" if options[:fix]
  args << "."
  system(
    "yarn",
    "--silent",
    "eslint",
    "--cache",
    *args,
  ) && puts("No problems or warnings")
end

puts "\n== tsc =="
system("yarn", "--silent", "tsc", "--noEmit") && puts("No errors found")

puts "\n== srb =="
system("bundle", "exec", "srb", "tc")
