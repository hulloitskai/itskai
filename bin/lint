#!/usr/bin/env ruby
# frozen_string_literal: true

# == Helpers
def system!(*args, dir: nil)
  system(*args) || abort("Command `#{args.join(' ')}' failed")
end

def scoped(&block) = yield

# == Dependencies
system("bundle", "install", "--quiet") ||
  abort("Failed to install Ruby dependencies")
system("bin/yarn", "install", "--silent") ||
  abort("Failed to install Node dependencies")

# == Options
require "optparse"

options = {}

OptionParser.new do |opts|
  opts.banner = "Usage: bin/lint [--fix] <targets...>"
  opts.on("--fix", "Auto-fix code offences without correcting them") do |fix|
    options[:fix] = fix
  end
end.parse!

# == Formatting
puts "=> Running Rubocop"
scoped do
  args = []
  args << "--autocorrect" if options[:fix]
  system! "bin/rubocop", "--except", "Layout", *args
end

puts "\n=> Running Eslint"
scoped do
  args = %w[--ext .js,.jsx,.ts,.tsx,.graphql]
  args << "--fix" if options[:fix]
  args << "."
  system!(
    "bin/yarn", "--silent", "eslint", "--report-unused-disable-directives",
    *args,
  )
  puts "No problems or warnings"
end

puts "\n=> Running Typescript compiler"
system! "bin/yarn", "--silent", "tsc"
puts "No errors found"

puts "\n=> Running Sorbet"
system! "bin/srb", "typecheck"
